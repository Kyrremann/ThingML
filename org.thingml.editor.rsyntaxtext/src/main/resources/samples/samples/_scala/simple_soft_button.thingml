import "../../hardware/bricks/_scala/led.thingml"
import "../../hardware/bricks/_scala/button.thingml"
import "../../core/_scala/timer.thingml"

import "../../hardware/devices/_scala/soft_button.thingml"

thing SimpleSoftButton includes LedMsgs, TimerMsgs, SoftButtonMsgs 
{
    required port SoftButton 
    {
		receives click, double_click, long_press
	}
    
    required port Timer 
    {
		sends timer_start, timer_cancel
		receives timer_timeout
	}

    required port Led 
    {	
		sends led_toggle, led_off
	}

    statechart SimpleSoftButtonImpl init Running 
    {    
        composite state Running init Wait 
        {
   			transition -> BlinkSlow
   			event SoftButton?long_press
   			action Led!led_toggle ()

	        state Wait 
            {  
	        	on entry Led!led_off ()
	        
	        	internal event SoftButton?click
	        	action Led!led_toggle ()
	        	
	        	transition -> BlinkFast
	        	event SoftButton?double_click
	        	action Led!led_toggle ()         
	        }
	        
	        state BlinkFast
            {
	        	on entry Timer!timer_start (150)
	        	
	        	transition -> BlinkFast
	        	event Timer?timer_timeout
	        	action Led!led_toggle ()
	        	
	        	transition -> Wait
	        	event SoftButton?click 
	        }
        }
        
        state BlinkSlow 
        {
        	on entry Timer!timer_start (1000)
        	
        	transition -> BlinkSlow
	       	event Timer?timer_timeout
	        action Led!led_toggle ()
        	
        	transition -> Running
        	event SoftButton?click
        }
    }
}

configuration ScalaSimpleSoftButtonSimulator
{       
	group soft_button : SoftButtonScala
	instance led : LedScala
	
	instance timer : TimerScala 	
	instance simple_soft_button : SimpleSoftButton
	connector simple_soft_button.SoftButton => soft_button.soft_button.SoftButton
	connector simple_soft_button.Timer => timer.timer
    connector simple_soft_button.Led => led.Led
}